const passport = require("passport");
const GoogleStrategy = require("passport-google-oauth20").Strategy;
const mongoose = require("mongoose");
const keys = require("../config/keys");

const User = mongoose.model("users"); // pulling certain model from Mongoose, we specifies a key

// looks like the user has the same google profile Id as user123. We will give the user a token that says you are user123
// Call seriaizeUser(passport) with the user to generate the identifying piece of info -> Set-Cookie: "XXXXX"
passport.serializeUser((user, done) => {
  done(null, user.id); // userId that has been generated by Mongo
});

// Take identifying piece of info from cookie, pass into deserializeUser (passport) to turn it into a user
passport.deserializeUser((id, done) => {
  User.findById(id).then((user) => {
    done(null, user);
  });
});

// create a google stategy and assign it to passport to use
// before using google strategy, we will pass in clientId and client secret
// console.developers.google.com
// client ID -- public token
// client secret -- private tokens

passport.use(
  new GoogleStrategy(
    {
      clientID: keys.googleClientID,
      clientSecret: keys.googleClientSecret,
      callbackURL: "/auth/google/callback", // relative path
      proxy: true, // let google strategy to run through any proxy
    },
    async (accessToken, refreshToken, profile, done) => {
      console.log("access token: ", accessToken);
      console.log("refresh token: ", refreshToken);
      console.log("profile: ", profile);
      console.log("done: ", done);

      // first, we need to check if we already have the user in our mongoDB
      const existingUser = await User.findOne({ googleId: profile.id });

      if (existingUser) {
        // we already have a record with the given profile ID

        // Tell passport that we have finished creating a user and that it should now resume the auth process
        done(null, existingUser);
      } else {
        //  we don't have user and create one

        // user the user model class to create an instance
        const user = await new User({
          name: profile._json.name,
          email: profile._json.email,
          googleId: profile.id,
        }).save();
        // Once the user has been created in the DB, tell passport that we have finished creating a user and that it should now resume the auth process
        done(null, user);
      }
    }
  )
);
